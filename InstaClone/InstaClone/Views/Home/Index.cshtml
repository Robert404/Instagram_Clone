@model InstaClone.Models.Profile.SearchIndexModel
@inject ApplicationDbContext Context
@using Microsoft.AspNetCore.Components;

@{
    ViewData["Title"] = "Home Page";
}

<div>
    <form asp-controller="Search" asp-action="Search" method="post">
        <input asp-for="QueryString" class="profileSearch" placeholder="Search..." />
    </form>
</div>


<div class="card-columns">
    @foreach (var p in Context.Photos)
    {
        <div class="card homePagePhotos">
            <div class="card-header">
                <h4 class="userPhotoName"><a asp-controller="Search" asp-action="UserProfile" asp-route-name="@p.Name">@p.Name</a></h4>
            </div>
            <div class="card-body frontPagePhotos">
                @{
                    var photoPath = "~/images/" + (p.Photo ?? "noimage.jpg");
                    <img class="card-img-top " src="@photoPath" asp-append-version="true" />
                }
            </div>
            <div class="card-footer">
                <span class="material-icons commentIcon">
                    textsms
                </span>
                <button onclick="await @ToggleLike()" OnLikeToggled="" type="submit" class="btn @(liked == true? "btn-primary" : "btn-secondary")">
                    <i class="material-icons">favorite</i>
                </button>
                Liked: @postLiked
            </div>
        </div>
    }
</div>


@functions{

    [Parameter] public EventCallback<bool> OnLikeToggled { get; set; }
    bool liked = false;

    async Task ToggleLike()
    {
        liked = !liked;
        await OnLikeToggled.InvokeAsync(liked);
    }
}

@functions{
    bool postLiked = false;

    async Task PostLiked(bool isLiked)
    {
        postLiked = isLiked;
    }
}